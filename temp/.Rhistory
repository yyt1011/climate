mean(x)
x<- rnorm(10, mean=10)
print x
print(x)
mean(x)
x<- rnorm(10, mean=0)
print(x)
mean(x)
median(x)
type(x)
type.x
type.x()
typeof(x)
x<- rnorm(10, mean=0)
print(x)
x<-sort(x)
print(x)
mean(x)
median(x)
y<- sample(1:10, 100, replace = TRUE)
#choose 100 numbers in the dataset from 1 to 10, after using it put it back into the set again.
print(y)
y_freq<- table(y)
sort(y_freq, decreasing=TRUE)
sort(y,decreasing=FALSE)
y_count<- table(y)
sort(y_count, decreasing = TRUE)
y<- sample(1:10, 100, replace = TRUE)
#choose 100 numbers in the dataset from 1 to 10, after using it put it back into the set again.
print(y)
sort(y_freq, decreasing=TRUE)
median(y)
`2012.2014MPA_subgroups` <- read.delim("~/Desktop/data/2012-2014MPA_subgroups.csv")
View(`2012.2014MPA_subgroups`)
## 1. What are the names of the variables in data? (copy and paste output into Canvas assignment submission link)
names(data)
knitr::opts_chunk$set(echo = TRUE, comment = "#>")
## read data into R
df <- read.csv("2-data.csv", stringsAsFactors = FALSE)
setwd("~/")
## preview first six rows of data
head(df)
knitr::opts_chunk$set(echo = TRUE, comment = "#>")
## your code goes here
race <- table(df$race)
print race
print(race)
## your code goes here
race_sex <- table(df$race, df$sex)
print(race)
## your code goes here
race_sex <- table(df$race)
print(race)
sex <- table(df$sex)
print(sex)
## your code goes here
race_sex <- table(df$race, df$sex)
print(race_sex)
## use comment lines like this one to annotate (explain) your code
min_v <- min(df$age)
print(min_v)
min_v
min(df$age)
min(age)
min(df$age)
View(`2012.2014MPA_subgroups`)
View(df)
type(df$age)
class(df$age)
min(df$age)
min(df$age, na.rm = TRUE)
max(df$age, na.rm = TRUE)
min(df$polar, na.rm = TRUE)
min(df$sm_use, na.rm = TRUE)
min(df$network_agree, na.rm = TRUE)
min(df$age, df$polar, df$sm_use, df$network_agree, na.rm = TRUE)
c <- min(df$age, df$polar, df$sm_use, df$network_agree, na.rm = TRUE)
c
max(df$polar, na.rm = TRUE)
max(df$sm_use, na.rm = TRUE)
max(df$network_agree, na.rm = TRUE)
mean(df$age, na.rm = TRUE)
sd(df$age, na.rm = TRUE)
sd(df$polar, na.rm = TRUE)
sd(df$sm_use, na.rm = TRUE)
sd(df$network_agree, na.rm = TRUE)
min(df$pp, na.rm = TRUE)
count(df)
nrow{df}
nrow(df)
min(df$age, na.rm = TRUE)
min(df$polar, na.rm = TRUE)
min(df$sm_use, na.rm = TRUE)
min(df$network_agree, na.rm = TRUE)
min(df$pp, na.rm = TRUE)
max(df$age, na.rm = TRUE)
max(df$polar, na.rm = TRUE)
max(df$sm_use, na.rm = TRUE)
max(df$network_agree, na.rm = TRUE)
max(df$pp, na.rm = TRUE)
mean(df$age, na.rm = TRUE)
mean(df$polar, na.rm = TRUE)
mean(df$sm_use, na.rm = TRUE)
mean(df$network_agree, na.rm = TRUE)
mean(min(df$pp, na.rm = TRUE))
sd(df$age, na.rm = TRUE)
sd(df$polar, na.rm = TRUE)
sd(df$sm_use, na.rm = TRUE)
sd(df$network_agree, na.rm = TRUE)
sd(df$pp, na.rm = TRUE)
c <- table(min(df$age, na.rm = TRUE),max(df$age, na.rm = TRUE),mean(df$age, na.rm = TRUE),sd(df$age, na.rm = TRUE))
c
min(df$age, na.rm = TRUE)
max(df$age, na.rm = TRUE)
max(df$polar, na.rm = TRUE)
min(df$age, na.rm = TRUE)
max(df$age, na.rm = TRUE)
mean(df$age, na.rm = TRUE)
sd(df$age, na.rm = TRUE)
sex <- table(df$sex)
sex
race <- table(df$race)
race
277.0/364
22.0 /364
19.0/364
16.0/364
76+15
?seq
x <- c(1,2)
y <- x-1
print(y)
x <- c(1L)
class(x)
x <- c("TRUE")
class(x)
x <- c(TRUE)
class(x)
knitr::opts_chunk$set(echo = TRUE, comment = "#>")
ggplot(mtcars, aes(x = mpg, y = wt)) +
geom_point()
library(ggplot2)
ggplot(mtcars, aes(x = mpg, y = wt)) +
geom_point()
install.packages(c("gcookbook"))
install.packages(c("callr", "cluster", "DBI", "dplyr", "foreign", "highr", "hms", "httpuv", "lubridate", "MASS", "Matrix", "mgcv", "modelr", "munsell", "nlme", "pillar", "psych", "purrr", "Rcpp", "readxl", "rlang", "rmarkdown", "rpart", "selectr", "servr", "stringdist", "stringi", "stringr", "survival", "tidyr", "utf8", "xfun", "yaml"))
p <- ggplot(df, aes(x=factor(YEAR), y=CAP))+
geom_bar( stat="identity",fill="blue", width=0.75)+
ggtitle('2008-2018 Refugee Arrival Ceiling and Admitted')+
scale_x_discrete('YEAR')+
theme_fivethirtyeight()+
geom_line(aes(x=factor(df$YEAR),y=df$ADMITTED,group=1),color='#109779',size=1)
library ('ggplot2')
library ('ggthemes')
library ('scales')
df <- read.csv('ceiling.csv',stringsAsFactors = FALSE)
p <- ggplot(df, aes(x=factor(YEAR), y=CAP))+
geom_bar( stat="identity",fill="blue", width=0.75)+
ggtitle('2008-2018 Refugee Arrival Ceiling and Admitted')+
scale_x_discrete('YEAR')+
theme_fivethirtyeight()+
geom_line(aes(x=factor(df$YEAR),y=df$ADMITTED,group=1),color='#109779',size=1)
ggplot(df, aes(x=factor(YEAR), y=CAP))+
geom_bar( stat="identity",fill="blue", width=0.75)+
ggtitle('2008-2018 Refugee Arrival Ceiling and Admitted')+
scale_x_discrete('YEAR')+
theme_fivethirtyeight()+
geom_line(aes(x=factor(df$YEAR),y=df$ADMITTED,group=1),color='#109779',size=1)
ggplot(df, aes(x=factor(YEAR), y=CAP))+
geom_bar( stat="identity",fill="black", width=0.75)+
ggtitle('2008-2018 Refugee Arrival Ceiling and Admitted')+
scale_x_discrete('YEAR')+
theme_fivethirtyeight()+
geom_line(aes(x=factor(df$YEAR),y=df$ADMITTED,group=1),color='#109779',size=1)
ggplot(df, aes(x=factor(YEAR), y=CAP))+
geom_bar( stat="identity", width=0.75)+
ggtitle('2008-2018 Refugee Arrival Ceiling and Admitted')+
scale_x_discrete('YEAR')+
theme_fivethirtyeight()+
geom_line(aes(x=factor(df$YEAR),y=df$ADMITTED,group=1),color='#109779',size=1)
install.packages("Quandl")
library(Quandl)
library(Quandl)
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages(c("dbplyr", "dplyr", "ggplot2", "ggthemes", "tidyr", "tidyverse"))
install.packages(c("dbplyr", "dplyr", "ggplot2", "ggthemes", "tidyr", "tidyverse"))
install.packages("devtools")
install.packages("devtools")
library(devtools)
install.packages("devtools")
install.packages("devtools")
library(devtools)
library(ggplot2)
iinstall.packages("Quandl")
install.packages("Quandl")
library(Quandl)
install.packages("devtools")
library(devtools)
library(devtools)
library(Quandl)
mydata = Quandl("FRED/GDP")
View(mydata)
mydata = Quandl("FRED/GDP", type = "ts")
mydata2 = Quandl.datatable("ZACKS/FC", ticker="AAPL")
Ermb4ToEuDHDyaxaYsUf
Quandl.api_key("Ermb4ToEuDHDyaxaYsUf")
Quandl.api_key("Ermb4ToEuDHDyaxaYsUf")
mydata2 = Quandl.datatable("ZACKS/FC", ticker="AAPL")
mydata2 = Quandl.datatable("ZACKS/FC", ticker="AAPL")
Quandl.api_key("Ermb4ToEuDHDyaxaYsUf")
mydata2
View(mydata2)
library(Quandl)
mydata3 = Quandl.datatable("WIKI")
Quandl.api_key("Ermb4ToEuDHDyaxaYsUf")
mydata3 = Quandl.datatable("WIKI")
library(data.table)
data <- fread("https://docs.google.com/spreadsheets/u/2/d/e/2PACX-1vRwAqp96T9sYYq2-i7Tj0pvTf6XVHjDSMIKBdZHXiCGGdNC0ypEU9NbngS8mxea55JuCFuua1MUeOj5/pubhtml#")
View(data)
install.packages('wbstats')
library(httr)
library(jsonlite)
library(tidyverse)
library(wbstats)
sourceRequest <- GET(url = 'http://api.worldbank.org/v2/sources?format=json')
sourceResponse <- content(sourceRequest, as='text', encoding = 'UTF-8')
sourceJSON <- fromJSON(sourceResponse)
View(sourceJSON)
sourceJSON <- fromJSON(sourceResponse, flatten = TRUE)
sourceJSON <- fromJSON(sourceResponse, flatten = TRUE)
View(sourceJSON)
sourceJSON <- fromJSON(sourceResponse, flatten = TRUE) %>% data.frame()
sourceJSON[,cols]
sourceJSON <- fromJSON(sourceResponse, flatten = TRUE) %>% data.frame()
cols <- c('id','name')
sourceJSON[,cols]
View(sourceJSON)
sourceJSON <- fromJSON(sourceResponse, flatten = TRUE) %>% data.frame()
sourceJSON <- fromJSON(sourceResponse, flatten = TRUE)
sourceRequest <- GET(url = 'http://api.worldbank.org/v2/sources?format=json')
sourceResponse <- content(sourceRequest, as='text', encoding = 'UTF-8')
sourceJSON <- fromJSON(sourceResponse, flatten = TRUE)
View(sourceJSON)
sourceJSON <- fromJSON(sourceResponse, flatten = TRUE)%>%data.frame()
View(sourceJSON)
indicatorRequest <- GET(url = 'http://api.worldbank.org/v2/indicator?per_page=500&format=json&source=6')
indicactorResponse <- content(indicatorRequest, as = 'text', encoding = 'UTF-8')
indicatorJSON <- fromJSON(indicatorRequest, flatten = TRUE) %>% data.frame()
indicatorJSON <- fromJSON(indicatorResponse, flatten = TRUE) %>% data.frame()
indicatorJSON <- fromJSON(indicactorResponse, flatten = TRUE) %>% data.frame()
indicatorResponse <- content(indicatorRequest, as = 'text', encoding = 'UTF-8')
indicatorJSON <- fromJSON(indicatorResponse, flatten = TRUE) %>% data.frame()
cols <- c('id','name')
View(indiccatorJSON)
View(indicatorJSON)
indicator <- 'DT.DOD.DLXF.CD'
definition <- which(indicatorJSON$id == indicator)
print(definition)
indicatorRequest <- GET(url = 'http://api.worldbank.org/v2/indicator?per_page=500&format=json&source=6')
indicatorResponse <- content(indicatorRequest, as = 'text', encoding = 'UTF-8')
indicatorJSON <- fromJSON(indicatorResponse, flatten = TRUE) %>% data.frame()
View(indicatorJSON)
cols <- c('id','name')
View(indicatorJSON)
indicator <- 'DT.DOD.DLXF.CD'
definition <- which(indicatorJSON$id == indicator)
print(indicatorJSON$sourceNote[definition])
locationRequest <- GET(url = "http://api.worldbank.org/v2/country?per_page=300&format=json&source=6")
locationResponse <- content(locationRequest, as = "text", encoding = "UTF-8")
locationJSON <- fromJSON(locationResponse, flatten = TRUE) %>% data.frame()
View(locationJSON)
cols <- c("id","name")
locationList <- locationJSON[,col]
locationList <- locationJSON[,cols]
View(locationList)
install.packages('WDI')
library(WDI)
location = c("ECA","SSA","SAS","LAC","MNA","EAP")
firstYear = 2019
lastYear - 2018
lastYear = 2018
data = WDI(indicator = dataSeries, country = location, start = firstYear, end = lastYear)
firstYear = 2009
lastYear = 2019
data = WDI(indicator = dataSeries, country = location, start = firstYear, end = lastYear)
dataSeries = 'DT.DOD.DLXF.CD'
data = WDI(indicator = dataSeries, country = location, start = firstYear, end = lastYear)
head(data)
data$DT.DOD.DLXF.CD = data$DT.DOD.DLXF.CD/1000000000
data$DT.DOD.DLXF.CD = round(data$DT.DOD.DLXF.CD,0)
colnames(data)[colnames(data)=='country'] <- 'Region'
colnames(data)[colnames(data)=='DT.DOD.DLXF.CD'] . <- 'ExternalDebtStock'
colnames(data)[colnames(data)=='DT.DOD.DLXF.CD'] <- 'ExternalDebtStock'
colnames(data)[colnames(data)=='year'] <- 'Year'
data$Region <-sub('(excluding high income)', '', data$Region)
head(data)
data$Region <- sub('\\()','',data$Region)
head(data)
data <- subset(data, select = -c(iso2c))
head(data)
glimpse(df_rat)
setwd("~/Repo/climate/data")
climate <- read.csv('climate.csv')
View(climate)
setwd("~/Downloads")
setwd("~/Repo/climate/raw_climate_data")
library(readr)
files <- list.files(path = "~/Repo/climate/data", pattern = "*.csv", full.names = T)
tbl <- sapply(files, read_csv, simplify = FALSE)
files <- list.files(path = "~/Repo/climate/data", pattern = "*.csv", full.names = T)
tbl <- sapply(files, read_csv, simplify = FALSE) %>%
bind_rows(.id ="id")
library(dbplyr)
tbl <- sapply(files, read_csv, simplify = FALSE) %>%
bind_rows(.id ="id")
library(dplyr)
tbl <- sapply(files, read_csv, simplify = FALSE) %>%
bind_rows(.id ="id")
View(tbl)
read.csv("1961ARG.csv")
arg1 <- read.csv("1961ARG.csv")
arg2 <- read.csv("2016ARG.csv")
View(arg1)
arg <- rbind(arg1,arg2)
View(arg)
argfiles <- list.files(path="~/Repo/climate/raw_climate_data", pattern="*.csv", full.names = TRUE)
argfiles
arg_csv <- ldply(argfiles, read_csv)
library(plyr)
arg_csv <- ldply(argfiles, read_csv)
View(arg_csv)
write.csv(arg_csv, "arg_csv.csv")
write.csv(arg_csv, "*arg_csv.csv")
argfiles <- list.files(path="~/Repo/climate/raw_climate_data", pattern="*.csv", full.names = TRUE)
argfiles
arg_csv <- ldply(argfiles, read_csv)
View(arg_csv)
write.csv(arg_csv, "*aus_csv.csv")
argfiles <- list.files(path="~/Repo/climate/raw_climate_data", pattern="*.csv", full.names = TRUE)
argfiles
arg_csv <- ldply(argfiles, read_csv)
View(arg_csv)
write.csv(arg_csv, "*bra_csv.csv")
argfiles <- list.files(path="~/Repo/climate/raw_climate_data", pattern="*.csv", full.names = TRUE)
argfiles
arg_csv <- ldply(argfiles, read_csv)
View(arg_csv)
write.csv(arg_csv, "*can_csv.csv")
fra <- read.csv('1901FRA.csv')
View(fra)
fra <- read.csv('1901FRA.csv') %>% filter('Year' > 1959)
View(fra)
fra <- read.csv('1901FRA.csv') %>% filter('Year' > 1960)
View(fra)
fra <- fra%>% filter('Year' > 1960)
View(fra)
fra <- fra%>% filter('Year' = 1960)
fra <- fra%>% filter('Year' == 1960)
fra
tibble(fra)
View(fra)
fra <- read.csv('1901FRA.csv')
tibble(fra)
fra <- read.csv('1901FRA.csv') %>% filter(Year > 1960)
View(fra)
write.csv(fra_csv, "*fra_csv.csv")
write.csv(fra, "*fra_csv.csv")
fra <- read.csv('1901DEU.csv') %>% filter(Year > 1960)
View(fra)
write.csv(fra, "*DEU_csv.csv")
fra <- read.csv('1901IND.csv') %>% filter(Year > 1960)
View(fra)
fra <- read.csv('1901IDN.csv') %>% filter(Year > 1960)
View(fra)
write.csv(fra, "*ind_csv.csv")
fra <- read.csv('1901IND.csv') %>% filter(Year > 1960)
View(fra)
write.csv(fra, "*ind_csv.csv")
fra <- read.csv('1901ITA.csv') %>% filter(Year > 1960)
View(fra)
write.csv(fra, "*ita_csv.csv")
fra <- read.csv('1901JPN.csv') %>% filter(Year > 1960)
View(fra)
write.csv(fra, "*jpn_csv.csv")
fra <- read.csv('1901MEX.csv') %>% filter(Year > 1960)
View(fra)
write.csv(fra, "*mex_csv.csv")
fra <- read.csv('1901RUS.csv') %>% filter(Year > 1960)
View(fra)
write.csv(fra, "*rus_csv.csv")
fra <- read.csv('1901SAU.csv') %>% filter(Year > 1960)
View(fra)
write.csv(fra, "*sau_csv.csv")
fra <- read.csv('1901ZAF.csv') %>% filter(Year > 1960)
View(fra)
write.csv(fra, "*zaf_csv.csv")
fra <- read.csv('1901KOR.csv') %>% filter(Year > 1960)
fra <- read.csv('1901KOR.csv')
fra <- read.csv('1901KOR.csv', row.names = FALSE)
fra <- read.csv('1901KOR.csv')
View(fra)
kor <- read.csv('1901KOR.csv')
kor$Country <- paste(kor$Country, kor$Country2)
View(kor)
kor <- kor %>% select(-Country2)%>% filter(Year > 1960)
View(kor)
write.csv(kor,"*kor_csv.csv" )
fra <- read.csv('1901TUR.csv') %>% filter(Year > 1960)
View(fra)
write.csv(fra, "*tur_csv.csv")
fra <- read.csv('1901GBR.csv') %>% filter(Year > 1960)
View(fra)
write.csv(fra, "*gbr_csv.csv")
fra <- read.csv('1901USA.csv') %>% filter(Year > 1960)
View(fra)
write.csv(fra, "*usa_csv.csv")
setwd("~/Repo/climate/temp")
allfiles <- list.files(path="~/Repo/climate/temp", pattern="*.csv", full.names = TRUE)
allfiles
all_csv <- ldply(allfiles, read_csv)
write.csv(all_csv, "all_csv.csv")
View(all_csv)
a <- read.csv('*arg_csv.csv')
View(a)
usa <- read.csv("*usa_csv.csv")
View(usa)
colnames(usa)
colnames(a)
colnames(usa) <- colnames(a)
allfiles <- list.files(path="~/Repo/climate/temp", pattern="*.csv", full.names = TRUE)
all_csv <- ldply(allfiles, read_csv)
View(all_csv)
allfiles <- list.files(path="~/Repo/climate/temp", pattern="*.csv", full.names = TRUE)
allfiles <- list.files(path="~/Repo/climate/temp", pattern="*.csv", full.names = TRUE)
all_csv <- ldply(allfiles, read_csv)
View(all_csv)
rus <- read.csv("*rus_csv.csv")
colnames(rus) <- colnames(a)
View(usa)
write.csv(usa, "*usa_csv.csv", row.names = FALSE)
View(rus)
write.csv(usa, "*rus_csv.csv", row.names = FALSE)
write.csv(rus, "*rus_csv.csv", row.names = FALSE)
allfiles <- list.files(path="~/Repo/climate/temp", pattern="*.csv", full.names = TRUE)
allfiles
all_csv <- ldply(allfiles, read_csv)
View(all_csv)
deu <- read.csv('*deu_csv.csv')
colnames(deu)
View(deu)
deu <- read.csv('*arg_csv.csv')
colnames(arg)
View(arg)
View(arg)
arg <- read.csv('*arg_csv.csv')
colnames(arg)
View(arg)
deu <- read.csv('*deu_csv.csv')
colnames(deu)
View(deu)
aus <- read.csv('*aus_csv.csv')
colnames(aus)
View(aus)
allfiles <- list.files(path="~/Repo/climate/temp", pattern="*.csv", full.names = TRUE)
allfiles
all_csv <- ldply(allfiles, read_csv)
warnings()
View(all_csv)
arg <- read.csv('*arg_csv.csv')
View(arg)
colnames(arg)
chn <- read.csv("1901ARG.csv")
setwd("~/Repo/climate/raw_climate_data")
chn <- read.csv("1901ARG.csv")
chn <- read.csv("1901CHN.csv")
View(chn)
chn <- chn %>% select(Year > 1960)
chn <- chn %>% filter(Year > 1960)
write.csv(chn, "*chn_csv.csv")
arg <- read.csv('*arg_csv.csv')
setwd("~/Repo/climate/temp")
arg <- read.csv('*arg_csv.csv')
colnames(arg)
View(arg)
chn <- read.csv('*chn_csv.csv')
colnames(chn)
View(chn)
allfiles <- list.files(path="~/Repo/climate/temp", pattern="*.csv", full.names = TRUE)
allfiles
all_csv <- ldply(allfiles, read_csv)
View(all_csv)
all_csv_clean <- all_csv %>% select(-X1, X)
View(all_csv_clean)
all_csv_clean <- all_csv %>% select(-X)
View(all_csv_clean)
all_csv_clean <- all_csv %>% select(-X. -X1)
all_csv_clean <- all_csv %>% select(-X1)
all_csv_clean <- all_csv %>% select(-X1, -X)
for (row in 1:nrow(all_csv_clean)){
if (is.na(all_csv_clean[row, 1]) ==TRUE ){
all_csv_clean[row, 1] <- all_csv_clean[row, 6]
}
}
all_csv_clean <- all_csv_clean %>% select(1:5)
colnames(all_csv_clean) <- c("Temp",'Year',"Stat",'Name','Code')
write.csv(all_csv_clean, "climate_clean.csv", row.names = FALSE)
